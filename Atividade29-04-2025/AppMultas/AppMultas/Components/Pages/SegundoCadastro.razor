@page "/atualizado"
@inject VeiculoController veiculoController
@inject MultaController multaController
@inject NavigationManager navegacao
@rendermode InteractiveServer
@using AppMultas.Models;
@using AppMultas.Controllers;

<h3>REGISTRO DE MULTAS DE VEÍCULOS COM CADASTRO</h3>

<div class="container">
    <nav class="navbar navbar-light" style="background-color: white"></nav>

    <nav class="navbar navbar-light" style="background-color: darkgreen"></nav>

    <label for="veiculo" class="form-label">CARROS CADASTRADOS:</label>
    <select class="form-select" aria-label="Selecione um carro">
        <option selected>Selecione uma placa</option>
        @foreach (var item in veiculos)
        {
            <option value=@item.Id>@item.Placa</option>
        }
    </select>

    <nav class="navbar navbar-light" style="background-color: white"></nav>

    <nav class="navbar navbar-light" style="background-color: darkgreen"></nav>

    <div class="mb-3">
        <label for="exampleFormControlInput1" class="form-label">MODELO:</label>
        <input @bind="veiculo.Modelo" type="text" class="form-control" disabled="@campoBloqueado">
    </div>

    <div class="mb-3">
        <label for="exampleFormControlInput1" class="form-label">MARCA:</label>
        <input @bind="veiculo.Marca" type="text" class="form-control" disabled="@campoBloqueado">
    </div>

    <div class="mb-3">
        <label for="exampleFormControlInput1" class="form-label">PLACA:</label>
        <input @bind="veiculo.Placa" type="text" class="form-control" disabled="@campoBloqueado">
    </div>
    <nav class="navbar navbar-light" style="background-color: white"></nav>

    <nav class="navbar navbar-light" style="background-color: darkgreen"></nav>

    <nav class="navbar navbar-light" style="background-color: white"></nav>
    @*###################################################################*@
    <div class="mb-3">
        <label for="exampleFormControlInput1" class="form-label">DESCRIÇÃO:</label>
        <input @bind="Descricao" type="text" class="form-control" disabled="@campoBloqueado">
    </div>
    <div class="mb-3">
        <label for="exampleFormControlInput1" class="form-label">VALOR :</label>
        <input @bind="Descricao" type="number" class="form-control" disabled="@campoBloqueado">
    </div>
    @if (enabledButton)
    {
        <button type="button" class="btn btn-primary" @onchange="AddMulta">ADICIONAR</button>
    }
    else
    {
    }

    <nav class="navbar navbar-light" style="background-color: white"></nav>

    <nav class="navbar navbar-light" style="background-color: darkgreen"></nav>

    <nav class="navbar navbar-light" style="background-color: white"></nav>

    <table class="table">
        <thead>
            <tr>
                <th>Descrição:</th>
                <th>Valor:</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var multa in multas)
            {
                <tr>
                    <td>@multa.Descricao</td>
                    <td>R$ @multa.Valor</td>
                </tr>
            }
        </tbody>
    </table>
    @if (enabledButton)
    {
        <button type="button" class="btn btn-warning" @onchange="Cancelar">CANCELAR</button>
        <button type="button" class="btn btn-success" @onchange="Salvar">SALVAR</button>
    }
    else
    {
        <div class="alert alert-success" role="alert">
            Salvo com Sucesso;
        </div>
        <button type="button" class="btn btn-primary" @onchange="NovoRegistro">NOVO REGISTRO</button>
    }
</div>


@code {
	public List<Multa> multas = new List<Multa>();
	public List<Veiculo> veiculos = new List<Veiculo>();
	public Veiculo? veiculo = new Veiculo();
	private bool enabledButton = true;
	private bool campoBloqueado = false;
	public string? Descricao { get; set; }
	public double? ValorMulta { get; set; }

	protected override async Task OnInitializedAsync()
	{
		var listaVeiculos = await veiculoController.ListaDeVeiculos();
		veiculos = listaVeiculos;
	}

	public void SelecionarVeiculo(ChangeEventArgs e)
	{
		int id = Convert.ToInt32(e.Value);

		veiculo = veiculos.FirstOrDefault(v => v.Id == id);
	}

	public void AddMulta()
	{
		Multa multa = new Multa();
		multa.Descricao = Descricao;
		multa.Valor = ValorMulta;
		multa.Veiculo = veiculo;
		multas.Add(multa);
		Descricao = null; ValorMulta = null;
	}

	public async Task Salvar()
	{
		await multaController.AddRanger(multas);
		await multaController.Salvar();
		enabledButton = campoBloqueado = false; 
	}
	public void Cancelar()
	{
		navegacao.NavigateTo("/atualizado", forceLoad: true);
	}

	public void NovoRegistro()
	{
		navegacao.NavigateTo("/cadastro", forceLoad: true);
	}
}
