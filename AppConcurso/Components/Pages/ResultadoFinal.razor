@page "/resultadofinal"
@using AppConcurso.Models
@using AppConcurso.Controllers
@inject InscricaoController inscricaoControl
@inject NavigationManager navegacao
@rendermode InteractiveServer

<h2 class="mt-3">Resultado Final (com critérios de desempate)</h2>
<div class="container">

    <button type="button" class="btn btn-primary mt-5" @onclick="VerResultadoPreliminar">RESULTADO PRELIMINAR</button>

    <nav class="navbar navbar-light" style="background-color: black"></nav>

    <table class="table table-bordered table-striped">
        <thead class="table-success">
            <tr>
                <th>Classificação</th>
                <th>Nome</th>
                <th>CPF</th>
                <th>Nota Específicos</th>
                <th>Nota Gerais</th>
                <th>Idade</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var (insc, index) in resultadoFinal.Select((val, i) => (val, i + 1)))
            {
                <tr>
                    <td>@index</td>
                    <td>@insc.Candidato?.Nome</td>
                    <td>@insc.Candidato?.Cpf</td>
                    <td>@insc.Nota_Conh_Especificos</td>
                    <td>@insc.Nota_Conh_Gerais</td>
                    <td>@(DateTime.Now.Year - insc.Candidato?.Data_Nasc?.Year)</td>
                </tr>
            }
        </tbody>
    </table>
</div>

@code {
    private List<Inscricao> resultadoFinal = new List<Inscricao>();

    protected override async Task OnInitializedAsync()
    {
        var inscricoes = await inscricaoControl.ListaInscricoes(); // Deve incluir Candidato

        resultadoFinal = inscricoes.OrderByDescending(i => i.Nota_Conh_Especificos)
            .ThenByDescending(i => i.Nota_Conh_Gerais)
            .ThenBy(i => i.Candidato!.Data_Nasc) 
            .ToList();
    }
    private void VerResultadoPreliminar()
    {
        navegacao.NavigateTo("/resultadopreliminar");
    }
}
