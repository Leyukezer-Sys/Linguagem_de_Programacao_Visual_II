@page "/cadastrocandidato"
@using AppConcurso.Models
@using AppConcurso.Controllers
@inject CandidatoController candControl
@inject NavigationManager navegacao
@rendermode InteractiveServer

<h1>NOVO CANDIDATO</h1>

<div class="container">

	@if (campoBloqueado)
	{
		<div class="alert alert-success" role="alert">
			Salvo com Sucesso!!
		</div>
		<div class="row">
			<div class="col mx-2">
				<button type="button" class="btn btn-outline-primary" @onclick="NovoRegistro">NOVO REGISTRO</button>
			</div>
			<div class="col mx-2">
				<button type="button" class="btn btn-outline-primary" @onclick="CadastrarCargo">NOVO CARGO</button>
			</div>
			<div class="col mx-2">
				<button type="button" class="btn btn-outline-success" @onclick="CadastrarInscricao">NOVA INCRIÇÃO</button>
			</div>
		</div>
	}
	@if (check)
	{
		<div class="alert alert-danger" role="alert">
			Preencha o Nome!
		</div>
	}

	<div class="mb-3">
		<label class="form-label" for="txtName">Nome:<a style="color:red; font-weight:bold">*</a></label>
		<input @bind="candidato.Nome" class="form-control" id="txtName" type="text" placeholder="Insira o Nome do candidato" disabled="@campoBloqueado" />
	</div>
	<div class="row">
		<div class="col">
			<div class="mb-3">
				<label class="form-label" for="txtCpf">CPF:</label>
				<input @bind="candidato.Cpf" class="form-control" id="txtCpf" type="text" placeholder="Insira o cpf do candidato" disabled="@campoBloqueado" />
			</div>
		</div>
		<div class="col">
			<div class="mb-3">
				<label class="form-label" for="txtDataNasc">Data de Nascimento:</label>
				<input @bind="candidato.Data_Nasc" class="form-control" id="txtDataNasc" type="date" placeholder="informe a data de nascimento" disabled="@campoBloqueado" />
			</div>
		</div>
	</div>

	<nav class="navbar navbar-light" style="background-color: rebeccapurple"></nav>
	@if (!campoBloqueado)
	{
		<button type="button" class="btn btn-success" @onclick="Salvar" disabled="@campoBloqueado">SALVAR</button>
		<button type="button" class="btn btn-danger" @onclick="NovoRegistro" disabled="@campoBloqueado">CANCELAR</button>
	}

	<nav class="navbar navbar-light" style="background-color: black"></nav>

	<h3>Candidatos Cadastrados</h3>

	<table class="table table-striped">
		<thead>
			<tr>
				<th>Nome</th>
				<th>CPF</th>
				<th>Idade</th>
			</tr>
		</thead>
		<tbody>
			@foreach (var item in lista_candidatos)
			{
				<tr>
					<td>@item.Nome</td>
					<td>@item.Cpf</td>
					<td>@(item.Data_Nasc.HasValue ? DateTime.Now.Year - item.Data_Nasc.Value.Year : "Não Informada")</td>

				</tr>
			}
		</tbody>
	</table>

</div>


@code {
	public List<Candidato> lista_candidatos = new List<Candidato>();
	public Candidato candidato = new Candidato();
	private bool campoBloqueado = false;
	private bool check = false;

	protected override async Task OnInitializedAsync()
	{
		var lista = await candControl.ListaCandidato();
		if(lista != null){
			lista_candidatos = lista;
		}
	}

	public async Task Salvar()
	{
		candidato.Nome.TrimStart();
		if (candidato.Nome != null && !candidato.Nome.Equals(""))
		{
			await candControl.Add(candidato);
			await candControl.SalvarCandidato();
			var lista = await candControl.ListaCandidato();
			lista_candidatos = lista;
			campoBloqueado = true;

		}
		else
		{
			check = true;
		}
	}

	public void NovoRegistro()
	{
		candidato = new Candidato();
	}

	public void CadastrarCargo()
	{
		navegacao.NavigateTo("/cadastrocargo");
	}

	public void CadastrarInscricao()
	{
		navegacao.NavigateTo("/inscricao");
	}
}
